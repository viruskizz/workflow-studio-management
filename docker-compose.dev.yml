version: "3.8"

services:
  frontend:
    container_name: angular
    build:
      context: apollo
      dockerfile: Dockerfile
    command: ng serve --host 0.0.0.0
    volumes:
      - ./apollo:/usr/src/app  # for dev
      - .env:/usr/src/app/.env
    restart: unless-stopped
    ports:
      - 4200:4200
    networks:
      - main

  # https://blog.logrocket.com/containerized-development-nestjs-docker/
  backend:
    container_name: nestjs
    build:
      context: backend
      dockerfile: Dockerfile
    command: npm run start:debug
    ports:
      - 3000:3000
      - 9229:9229
    networks:
      - main
    volumes:
      - .env:/usr/src/app/.env
      - ./backend:/usr/src/app
    restart: unless-stopped
    depends_on:
      - database

  # database:
  #   container_name: postgres
  #   build:
  #     context: database
  #     dockerfile: Dockerfile
  #     args:
  #       - DB_NAME=${DB_NAME}
  #       - DB_USERNAME=${DB_USERNAME}
  #       - DB_PASSWORD=${DB_PASSWORD}
  #   environment:
  #     - POSTGRES_PASSWORD
  #   ports:
  #     - "5432:5432"
  #   networks:
  #     - main
  #   volumes:
  #     - ./database/data:/var/lib/postgresql/data
  #   restart: always

  # mysql
  database:
    container_name: mysql
    image: mysql:8.4.4
    environment:
      - MYSQL_ROOT_PASSWORD
      - MYSQL_DATABASE
      - MYSQL_USER
      - MYSQL_PASSWORD
    ports:
      - "3306:3306"
    networks:
      - main
    volumes:
      - ./database/data:/var/lib/mysql
    restart: always
networks:
  main:
